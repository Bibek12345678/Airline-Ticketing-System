@model TicketBooking.Models.Application

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Application</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label col-md-2"
               for="CustomerName">Name</label> <div class="col-md-10">
            <input class="form-control text-box single-line"
                   id="Name"
                   name="Name"
                   type="text"
                   value=""
                   data-bind="textInput: Name" pattern="[a-zA-Z\s]+" required>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Gender, (IEnumerable<SelectListItem>)ViewBag.Gender, "Select Gender", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Qualification, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalExperience, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalExperience, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalExperience, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-12">
        <table id="NewTable" class="table table-striped table-sm">
            <thead>
                <tr>
                    <th>CompanyName</th>
                    <th>Designation</th>
                    <th>Years Worked</th>
                    <th></th>
                </tr>

            </thead>
            <tbody>
                @*@foreach(var item in Model.Experiences)*@
                @for (int i = 0; i < Model.Experiences.Count; i++)
                {
                    <tr>
                        <td>
                            @Html.EditorFor(x => x.Experiences[i].CompanyName, new { htmlAttriibutes = new { @class = "form-control" } })
                        </td>
                        <td>
                            @Html.EditorFor(x => x.Experiences[i].Designation, new { htmlAttriibutes = new { @class = "form-control" } })
                        </td>
                        <td>
                            @Html.EditorFor(x => x.Experiences[i].YearsWorked, new { htmlAttriibutes = new { @class = "form-control" } })
                        </td>
                        <td>
                            <button id='btndummy -@i' type="button" class="btn btn-sm invisible">Dummy</button>
                            <button id="btnadd-@i" type="button" class="btn btn-sm btn-secondary visible" onclick="AddItems(this)"
                                    style="left:90%; position:absolute;">
                                Add
                            </button>
                            <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger invisible" onclick="DeleteItem(this)"
                                    style="left:90%; position:absolute;">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <input type="hidden" id="hdnLastIndex" value="0" />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*<script language="JavaScript" type="text/javascript" src="/js/jquery-1.2.6.min.js"></script>
<script language="JavaScript" type="text/javascript" src="/js/jquery-ui-personalized-1.5.2.packed.js"></script>
<script language="JavaScript" type="text/javascript" src="/js/sprinkle.js"></script>*@
@*<script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
    <script src="http://code.jquery.com/jquery-migrate-1.1.0.min.js"></script>*@
<script type="text/javascript">
    //$(".custom-file-input").on("change", function () {
    //    var fileName = $(this).val().split("\\").pop();
    //    $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
    //    console.log("clik");
    //});
    function DeleteItem(btnadds) {
        $(btnadds).closest('tr').remove();
    }
    function AddItems(btnadds) {
        var table = document.getElementById('NewTable');
        var rows = table.getElementsByTagName('tr');

        var rowOuterHtml = rows[rows.length - 1].outerHTML;

        var lastrowIdx = document.getElementById('hdnLastIndex').value;
        var nextrowIdx = eval(lastrowIdx) + 1;
        document.getElementById('hdnLastIndex').value = nextrowIdx;

        rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');

        rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');

        rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx + '-' + nextrowIdx);
        var newRow = table.insertRow();
        newRow.innerHTML = rowOuterHtml;

        var btnAddID = btnadds.id;
        var btnDeleteid = btnAddID.replaceAll('btnadd', 'btnremove');
        var delbtn = document.getElementById(btnDeleteid);
        delbtn.classList.add("visible");
        delbtn.classList.remove("invisible");

        var addbtn = document.getElementById(btnAddID);
        addbtn.classList.remove("visible");
        addbtn.classList.add("invisible");
        console.log("clicked");


    }
</script>